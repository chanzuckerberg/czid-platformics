{
    "default_env": "dev",
    "app": "workflows",
    "default_compose_env_file": ".env.ecr",
    "environments": {
        "dev": {
            "aws_profile": "idseq-dev",
            "aws_region": "us-west-2",
            "k8s": {
                "namespace": "czid-dev-happy-happy-env",
                "cluster_id": "czid-dev-eks",
                "auth_method": "eks"
            },
            "terraform_directory": ".happy/terraform/envs/dev",
            "task_launch_type": "k8s",
            "auto_run_migrations": true,
            "stack_overrides": {
                "additional_env_vars": {
                    "AWS_REGION": "us-west-2",
                    "CERBOS_URL": "http://localhost:3592",
                    "DEFAULT_UPLOAD_BUCKET": "local-bucket",
                    "DEFAULT_UPLOAD_PROTOCOL": "s3",
                    "IDENTITY_SERVICE_BASE_URL": "http://sandbox.czid.org",
                    "ENTITY_SERVICE_URL": "http://ryan-test-entities:8008",
                    "JWK_PRIVATE_KEY_FILE": "/var/policies/private_key.pem",
                    "JWK_PUBLIC_KEY_FILE": "/var/policies/public_key.pem",
                    "PLATFORMICS_EVENT_BUS_PLUGIN": "swipe",
                    "PLATFORMICS_EVENT_BUS__REDIS__QUEUE_NAME": "workflow-events",
                    "PLATFORMICS_EVENT_BUS__REDIS__REDIS_URL": "redis://redis.czidnet:6378",
                    "PLATFORMICS_EVENT_BUS__SWIPE__SQS_QUEUE_URL": "https://sqs.us-west-2.amazonaws.com/732052188396/idseq-swipe-staging-nextgen-web-sfn-notifications-queue",
                    "PLATFORMICS_WORKFLOW_RUNNER_PLUGIN": "swipe",
                    "PLATFORMICS_WORKFLOW_RUNNER__LOCAL__S3_ENDPOINT": "",
                    "PLATFORMICS_WORKFLOW_RUNNER__SWIPE__OUTPUT_S3_PREFIX": "s3://idseq-samples-development/nextgen/",
                    "PLATFORMICS_WORKFLOW_RUNNER__SWIPE__STATE_MACHINE_ARN": "arn:aws:states:us-west-2:732052188396:stateMachine:idseq-swipe-sandbox-default-wdl",
                    "WORKERS": "2"
                },
                "emptydir_volumes": [
                    {
                        "name": "policies",
                        "parameters": {
                            "size_limit": "100Mi"
                        }
                    }
                ],
                "services": {
                    "workflows": {
                        "cpu": "2",
                        "health_check_path": "/graphql",
                        "init_containers": {
                            "init": {
                                "cmd": [
                                    "cp",
                                    "-r",
                                    "/workflows/cerbos/",
                                    "/var/policies/"
                                ],
                                "image": "{workflows}",
                                "tag": "${var.image_tag}"
                            }
                        },
                        "memory": "1000Mi",
                        "service_type": "INTERNAL",
                        "sidecars": {
                            "cerbos": {
                                "args": [
                                    "server",
                                    "--config",
                                    "/var/policies/cerbos/config/config.yaml"
                                ],
                                "cpu": "100m",
                                "image": "ghcr.io/cerbos/cerbos",
                                "memory": "300Mi",
                                "port": 3592,
                                "tag": "0.29.0"
                            }
                        }
                    }, 
                    "workflows-worker": {
                        "cpu": "2",
                        "memory": "1000Mi",
                        "service_type": "INTERNAL"
                    }
                },
                "source": "git@github.com:chanzuckerberg/happy//terraform/modules/happy-stack-eks?ref=rlim/ephemeral-volume-support",
                "tasks": {
                    "migrate": {
                        "cmd": [
                            "/workflows/scripts/migrate.sh"
                        ],
                        "cpu": "100m",
                        "image": "{workflows}:${var.image_tag}",
                        "memory": "1000Mi",
                        "platform_architecture": "arm64"
                    }
                }
            }
        },
        "sandbox": {
            "aws_profile": "idseq-dev",
            "aws_region": "us-west-2",
            "k8s": {
                "namespace": "czid-sandbox-happy-happy-env",
                "cluster_id": "czid-sandbox-eks",
                "auth_method": "eks"
            },
            "terraform_directory": ".happy/terraform/envs/sandbox",
            "task_launch_type": "k8s",
            "auto_run_migrations": true,
            "stack_overrides": {
                "additional_env_vars": {
                    "AWS_REGION": "us-west-2",
                    "CERBOS_URL": "http://localhost:3592",
                    "DEFAULT_UPLOAD_BUCKET": "local-bucket",
                    "DEFAULT_UPLOAD_PROTOCOL": "s3",
                    "IDENTITY_SERVICE_BASE_URL": "http://sandbox.czid.org",
                    "ENTITY_SERVICE_URL": "http://entities-entities:8008",
                    "JWK_PRIVATE_KEY_FILE": "/var/policies/private_key.pem",
                    "JWK_PUBLIC_KEY_FILE": "/var/policies/public_key.pem",
                    "PLATFORMICS_EVENT_BUS_PLUGIN": "swipe",
                    "PLATFORMICS_EVENT_BUS__REDIS__QUEUE_NAME": "workflow-events",
                    "PLATFORMICS_EVENT_BUS__REDIS__REDIS_URL": "redis://redis.czidnet:6378",
                    "PLATFORMICS_EVENT_BUS__SWIPE__SQS_QUEUE_URL": "https://sqs.us-west-2.amazonaws.com/732052188396/idseq-swipe-sandbox-nextgen-web-sfn-notifications-queue",
                    "PLATFORMICS_WORKFLOW_RUNNER_PLUGIN": "swipe",
                    "PLATFORMICS_WORKFLOW_RUNNER__LOCAL__S3_ENDPOINT": "",
                    "PLATFORMICS_WORKFLOW_RUNNER__SWIPE__OUTPUT_S3_PREFIX": "s3://idseq-samples-sandbox/nextgen/",
                    "PLATFORMICS_WORKFLOW_RUNNER__SWIPE__STATE_MACHINE_ARN": "arn:aws:states:us-west-2:732052188396:stateMachine:idseq-swipe-sandbox-default-wdl",
                    "SERVICE_NAME": "workflows",
                    "WORKERS": "2"
                },
                "emptydir_volumes": [
                    {
                        "name": "policies",
                        "parameters": {
                            "size_limit": "100Mi"
                        }
                    }
                ],
                "services": {
                    "workflows": {
                        "cpu": "2",
                        "health_check_path": "/graphql",
                        "init_containers": {
                            "init": {
                                "cmd": [
                                    "cp",
                                    "-r",
                                    "/workflows/cerbos/",
                                    "/var/policies/"
                                ],
                                "image": "{workflows}",
                                "tag": "${var.image_tag}"
                            }
                        },
                        "memory": "1000Mi",
                        "service_type": "INTERNAL",
                        "sidecars": {
                            "cerbos": {
                                "args": [
                                    "server",
                                    "--config",
                                    "/var/policies/cerbos/config/config.yaml"
                                ],
                                "cpu": "100m",
                                "image": "ghcr.io/cerbos/cerbos",
                                "memory": "300Mi",
                                "port": 3592,
                                "tag": "0.29.0"
                            }
                        }
                    }
                },
                "source": "git@github.com:chanzuckerberg/happy//terraform/modules/happy-stack-eks?ref=rlim/ephemeral-volume-support",
                "tasks": {
                    "migrate": {
                        "cmd": [
                            "/workflows/scripts/migrate.sh"
                        ],
                        "cpu": "100m",
                        "image": "{workflows}:${var.image_tag}",
                        "memory": "1000Mi",
                        "platform_architecture": "arm64"
                    }
                }
            }
        },
        "staging": {
            "aws_profile": "idseq-dev",
            "aws_region": "us-west-2",
            "k8s": {
                "namespace": "czid-staging-happy-happy-env",
                "cluster_id": "czid-staging-eks",
                "auth_method": "eks"
            },
            "terraform_directory": ".happy/terraform/envs/staging",
            "task_launch_type": "k8s",
            "auto_run_migrations": true,
            "stack_overrides": {
                "services": {
                    "workflows": {
                        "health_check_path": "/graphql/",
                        "path": "/graphql/*",
                        "priority": 0,
                        "service_type": "PRIVATE",
                        "success_codes": "200-499"
                    }
                },
                "source": "git@github.com:chanzuckerberg/happy//terraform/modules/happy-stack-eks?ref=main"
            }
        }, 
        "prod": {
            "aws_profile": "idseq-prod",
            "aws_region": "us-west-2",
            "k8s": {
                "namespace": "czid-prod-happy-happy-env",
                "cluster_id": "czid-prod-eks",
                "auth_method": "eks"
            },
            "terraform_directory": ".happy/terraform/envs/prod",
            "task_launch_type": "k8s"
        }
    },
    "tasks": {
        "migrate": [
            "migrate"
        ]
    },
    "services": [
        "workflows", 
        "workflows-worker"
    ],
    "features": {
        "enable_dynamo_locking": true,
        "enable_happy_api_usage": true,
        "enable_ecr_auto_creation": true,
        "enable_unified_config": true
    },
    "api": {},
    "stack_defaults": {
        "create_dashboard": false,
        "routing_method": "CONTEXT",
        "services": {
            "workflows": {
                "name": "workflows",
                "platform_architecture": "arm64",
                "port": 8042
            }
        }
    }
}
