# Auto-generated by 'happy infra'. Do not edit
# Make improvements in happy, so that everyone can benefit.
module "stack" {
  source           = "git@github.com:chanzuckerberg/happy//terraform/modules/happy-stack-eks?ref=rlim/ephemeral-volume-support"
  image_tag        = var.image_tag
  stack_name       = var.stack_name
  k8s_namespace    = var.k8s_namespace
  image_tags       = jsondecode(var.image_tags)
  stack_prefix     = "/${var.stack_name}"
  app_name         = var.app
  deployment_stage = "sandbox"
  services = {
    workflows = {
      aws_iam = {
        policy_json = data.aws_iam_policy_document.workflows.json,
      }
      name                  = "workflows"
      health_check_path     = "/graphql"
      platform_architecture = "arm64"
      port                  = 8042
      cpu                   = "2"
      memory                = "1000Mi"
      service_type          = "INTERNAL"

      init_containers = {
        init = {
          cmd   = ["cp", "-r", "/workflows/cerbos/", "/var/policies/"]
          image = "{workflows}"
          tag   = "${var.image_tag}" # manually modified as `happy infra generate` appended an extra $ to the front 
        }
      }
      sidecars = {
        cerbos = {
          args   = ["server", "--config", "/var/policies/cerbos/config/config.yaml"]
          cpu    = "100m"
          image  = "ghcr.io/cerbos/cerbos"
          memory = "300Mi"
          port   = 3592
          tag    = "0.29.0"
        }
      }
    }
  }
    additional_env_vars = {
    AWS_REGION                                      = "us-west-2"
    BOTO_ENDPOINT_URL                               = "http://motoserver.czidnet:4000"
    CERBOS_URL                                      = "http://localhost:3592"
    DEFAULT_UPLOAD_BUCKET                           = "local-bucket"
    DEFAULT_UPLOAD_PROTOCOL                         = "s3"
    ENTITY_SERVICE_URL                              = "http://entities-entities:8008"
    ENTITY_SERVICE_AUTH_TOKEN                       = "eyJhbGciOiJFQ0RILUVTIiwiZW5jIjoiQTI1NkNCQy1IUzUxMiIsImVwayI6eyJjcnYiOiJQLTM4NCIsImt0eSI6IkVDIiwieCI6InU2cDh2eTZCLVZMLUxqRmptUzg2N0N2cWtkLV9pcFJGM2pJR2tHakh6eWU3b3Q2SkQzUWQ5YTM0Nk5feU40d2oiLCJ5IjoiRkdWb1VPOUJhQXRScU1sR3g1NWlCblU2MEQxeHJSZXVJRDFOa25zQnYyRTJLNnVLTUMwU2xsSTdPYVFHZXd6NSJ9LCJraWQiOiItQmx2bF9wVk5LU2JRQ2N5dGV4UzNfMk5MaHBia2J6LVk5VFFjbkY5S1drIiwidHlwIjoiSldFIn0..i3Rq4DgR5HCWzzIegXt0qg.EmsK8VO2h9MG4wIFc8UNDs2eeMna7G9l-vaALVzZe5WKs4zRQz0k9K4PD96oMUxdHDvmOXnWMIfK8RYxcu_fIy4DFCdhHbsu7FBODK5fA3yJXYVBzIpcDFEKhxhaNrPaxos2neOD8cB5XFEl958t4aAR5zPXR_DUsTErfdo7SLsT3jAYm6hGqL8qZrdzGhoMaqk4tHfKM_ItXg-V5yfRvyK4CQLu_TquMMeh4mfWUH4wFHMTgSS5b8m2TcHQYt_HahSld6RyY07Fm9wrBPb83MI1tdyQJo1jik-h-8tG2-4uzasoOxosXz-PalGarvYmC8PtfyUdoDKaA5waF--OYD3z7ahPrBup9DCL_h8H3oQq9qd6B3DBq077LTfJ2o2Fq9_MZc0u-JAKuRrxmjtyCUjpUHG-YsBe-GNGdDVzVx5xvYGRE4ZSRSNkmnim7fFRmV0C711iZOl1w60Ke8iDcOr6N5eMEyIs65CLLD7koWrCkPFIYvf_V88miwtvNrsba9ISBu_fhmOy7Bsop5uw-k6Atg2QSlkcjWEqONEHYf115tENOYxciGr_z69OD9W8.dg4WmTnBm3RLaoJ8Ga1OxthzcKW03EoXeTGfIMyrK34"
    JWK_PRIVATE_KEY_FILE                            = "/var/policies/private_key.pem"
    JWK_PUBLIC_KEY_FILE                             = "/var/policies/public_key.pem"
    WORKERS                                         = "2"
    PLATFORMICS_WORKFLOW_RUNNER_PLUGIN              = "swipe"
    PLATFORMICS_EVENT_BUS_PLUGIN                    = "swipe"
    PLATFORMICS_WORKFLOW_RUNNER__LOCAL__S3_ENDPOINT = ""
    PLATFORMICS_WORKFLOW_RUNNER__SWIPE__OUTPUT_S3_PREFIX  = "s3://idseq-samples-development/nextgen/"
    PLATFORMICS_WORKFLOW_RUNNER__SWIPE__STATE_MACHINE_ARN = "arn:aws:states:us-west-2:732052188396:stateMachine:idseq-swipe-sandbox-default-wdl"
    PLATFORMICS_EVENT_BUS__SWIPE__SQS_QUEUE_URL     = "https://sqs.us-west-2.amazonaws.com/732052188396/idseq-swipe-dev-web-sfn-notifications-queue"
    PLATFORMICS_EVENT_BUS__REDIS__REDIS_URL         = "redis://redis.czidnet:6378"
    PLATFORMICS_EVENT_BUS__REDIS__QUEUE_NAME        = "workflow-events"
    SERVICE_NAME                                    = "workflows"
  }
  create_dashboard = false
  emptydir_volumes = [{
    name = "policies"
    parameters = {
      size_limit = "100Mi"
    }
  }]
  routing_method = "CONTEXT"
  tasks = {
    migrate = {
      cmd                   = ["/workflows/scripts/migrate.sh"]
      cpu                   = "100m"
      image                 = "{workflows}:${var.image_tag}"
      memory                = "1000Mi"
      platform_architecture = "arm64"
    }
  }
}
