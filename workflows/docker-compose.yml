version: '3.8'

x-aws-variables: &aws-variables
  ? AWS_ACCESS_KEY_ID=123
  ? AWS_SECRET_ACCESS_KEY=123
  ? AWS_SESSION_TOKEN=123
  ? AWS_REGION=us-east-1
  ? AWS_DEFAULT_REGION=us-east-1

x-db-variables: &db-variables
  ? PLATFORMICS_DATABASE_HOST=postgres.czidnet
  ? PLATFORMICS_DATABASE_PORT=5432
  ? PLATFORMICS_DATABASE_USER=postgres
  ? PLATFORMICS_DATABASE_PASSWORD=password_postgres
  ? PLATFORMICS_DATABASE_NAME=platformics

x-webservice-variables: &webservice-variables
  ? WORKERS=2

x-redis-variables: &redis-variables
  ? PLATFORMICS_EVENT_BUS__REDIS__REDIS_URL=redis://redis.czidnet:6378
  ? PLATFORMICS_EVENT_BUS__REDIS__QUEUE_NAME=workflow-events
  
x-workflow-variables: &workflow-variables
  ? ENVIRONMENT
  ? SERVICE_IDENTITY_SECRET_NAME=dev/czid-workflows-service-identity-token
  ? IDENTITY_SERVICE_URL=http://web.czidnet:3001
  ? BOTO_ENDPOINT_URL=http://motoserver.czidnet:4000
  ? ENTITY_SERVICE_URL=http://entities.czidnet:8008
  ? DEFAULT_UPLOAD_BUCKET=local-bucket
  ? ENTITY_SERVICE_AUTH_TOKEN=eyJhbGciOiJFQ0RILUVTIiwiZW5jIjoiQTI1NkNCQy1IUzUxMiIsImVwayI6eyJjcnYiOiJQLTM4NCIsImt0eSI6IkVDIiwieCI6ImNwck5NM1pkaDNyR2RpaXp3ZUY1M1ZHam1VV251M0VjUWRnUzJvajJEZ3RlcnMtUHFJZWpsdm1hVWsyZHpjQ1kiLCJ5Ijoidlk2NE9BdGdoSFNmSWcxMU9zZkYzOFZQR3VSZDVta05XQmxneW4wVzlWeGYxeVBOMThxQ1N0Sm5GZzU3OWZlbyJ9LCJraWQiOiItQmx2bF9wVk5LU2JRQ2N5dGV4UzNfMk5MaHBia2J6LVk5VFFjbkY5S1drIiwidHlwIjoiSldFIn0..rFDF7jg2RBSdKLfU4vQmFA.3eCWopLvIpAWZTFwMmx4CGaJHJntvpgYLGVXjr_o7nx-N7HUb_XLUrd9RteLT36sQ1DjefxHCINM5_Spil3Pxbhm8y2EJ7evWmoJh2fCkTcvz1el7UbA2fpCZoknO2ji7J27GLAE-6ldRL4pvihfGLJPio1qqgK8oWB1DBjm5xvb-DdFznkTBjdGynigTYmjLhbxk-sKO2EYKSczg3NKPmPSy-_-cLtxO8-BRhxMe-0q9O-NLEwJnWwrAj0T5NhBlpMd3yWLUPatYKO0rLngHLIvh5axvK8iBElst0qlUgerQI3c7TVFxxIkmXA4szfCrQhZqweXUDEpVug3Esvu7uGmllr0Vx34o6Tv90Xwuu3Xtxnw6E-aa2XYtwo7q5LyZqAikUg60qNRCN2G63KA7qPv5iNqA0mfYF0rMTPYtmEYt88u3FJkbPMeFwnvIYaN-PE96gebJF12QPLk9dOsGaQfwM7zSyvs7Pooi7IzKWJPvp4yEvdgzNl9-nWAWEq2clAreEDbcpqHs6iaKeBK52o69yfYKPqXGbloW-MN_AFgmlWRS-aay3kYnmLfsvmrzfYthufq2gvJd_MCYpHAkRgvgMaVX1mgwyAHOt8kocZBcWM3IVESRJgL1PKI0fRj.xfjAaB37OAWOk-OpjXNCvS6qnErejx-SfRpT05cui7M
  ? DEFAULT_UPLOAD_PROTOCOL=S3 # don't need this in workflows
  ? PLATFORMICS_EVENT_BUS_PLUGIN=redis
  ? PLATFORMICS_EVENT_BUS__SWIPE__SQS_QUEUE_URL=http://motoserver.czidnet:4000/123456789012/swipe-test-notifications-sfn-notifications-queue
  ? PLATFORMICS_EVENT_BUS__SWIPE__SQS_ENDPOINT=http://motoserver.czidnet:4000
  ? PLATFORMICS_WORKFLOW_RUNNER_PLUGIN=local
  ? PLATFORMICS_WORKFLOW_RUNNER__LOCAL__S3_ENDPOINT=http://motoserver.czidnet:4000
  ? PLATFORMICS_WORKFLOW_RUNNER__SWIPE__OUTPUT_S3_PREFIX=s3://local-bucket/nextgen/
  ? PLATFORMICS_WORKFLOW_RUNNER__SWIPE__STATE_MACHINE_ARN=arn:aws:states:us-east-1:123456789012:stateMachine:swipe-test-default-wdl
  ? PLATFORMICS_WORKFLOW_RUNNER__SWIPE__SFN_ENDPOINT=http://stepfunctions.czidnet:8083
  ? SERVICE_NAME=workflows

x-cerbos-variables: &cerbos-variables
  ? CERBOS_URL=http://wf-cerbos:3592
  ? JWK_PUBLIC_KEY_FILE=/workflows/test_infra/fixtures/public_key.pem
  ? JWK_PRIVATE_KEY_FILE=/workflows/test_infra/fixtures/private_key.pem

services:
  redis:
    image: redis:7
    ports:
      - "6378:6378"
    command: ["redis-server", "--port", "6378"]
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password_postgres
      - POSTGRES_DB=platformicsworkflows
      # The postgres image declares a mounted volume at /var/lib/postgresql/data
      # by default, which means that the data in that directory is difficult to
      # snapshot and export. Here, we're telling Postgres to use this (non-mounted)
      # directory as its storage location instead so it works with our db snapshot
      # workflow.
      - PGDATA=/var/lib/platformics/data
  workflows:
    build:
      context: ".."
      dockerfile: "workflows/Dockerfile"
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: "platformics-workflows"
    restart: always
    volumes:
      - .:/workflows
      # mount /tmp for local runner which uses miniwdl
      - /tmp:/tmp
      # enable docker in docker
      - /var/run/docker.sock:/var/run/docker.sock
      - ../platformics:/workflows/platformics
    ports:
      - 8042:8042
    stdin_open: true # Helps with pdb
    tty: true # Helps with pdb
    environment:
      <<: [*aws-variables, *db-variables, *redis-variables, *workflow-variables, *cerbos-variables, *webservice-variables]
  workflows-worker:
    build:
      context: ".."
      dockerfile: "workflows/Dockerfile"
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: "platformics-workflows"
    command: ["python3", "api/loader/run_loader.py"]
    restart: always
    volumes:
      - .:/workflows
    stdin_open: true # Helps with pdb
    tty: true # Helps with pdb
    environment:
      <<: [*aws-variables, *db-variables, *redis-variables, *workflow-variables, *cerbos-variables]
  wf-cerbos:
    image: ghcr.io/cerbos/cerbos:0.29.0
    volumes:
      - ./cerbos:/var/policies/cerbos/
    command:
      ["server", "--config", "/var/policies/cerbos/config/config.yaml"]
networks:
  default:
    name: czidnet
    driver: overlay
    attachable: true
    external: true
