"""codegenned workflows

Revision ID: 20231205_155329
Revises: 
Create Date: 2023-12-05 23:53:32.381717

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "20231205_155329"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entity",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("producing_run_id", sa.Integer(), nullable=True),
        sa.Column("owner_user_id", sa.Integer(), nullable=False),
        sa.Column("collection_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_entity")),
    )
    op.create_table(
        "workflow",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("default_version", sa.String(), nullable=True),
        sa.Column("minimum_supported_version", sa.String(), nullable=True),
        sa.Column("entity_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name=op.f("fk_workflow_entity_id_entity")),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_workflow")),
    )
    op.create_table(
        "workflow_version",
        sa.Column("graph_json", sa.String(), nullable=True),
        sa.Column("manifest", sa.String(), nullable=True),
        sa.Column("workflow_id", sa.UUID(), nullable=True),
        sa.Column("entity_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name=op.f("fk_workflow_version_entity_id_entity")),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow.entity_id"], name=op.f("fk_workflow_version_workflow_id_workflow")
        ),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_workflow_version")),
    )
    op.create_table(
        "run",
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("ended_at", sa.DateTime(), nullable=True),
        sa.Column("execution_id", sa.String(), nullable=True),
        sa.Column("outputs_json", sa.String(), nullable=True),
        sa.Column("inputs_json", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("SUCCEEDED", "FAILED", "PENDING", "STARTED", "RUNNING", name="runstatus", native_enum=False),
            nullable=True,
        ),
        sa.Column("workflow_version_id", sa.UUID(), nullable=True),
        sa.Column("entity_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name=op.f("fk_run_entity_id_entity")),
        sa.ForeignKeyConstraint(
            ["workflow_version_id"],
            ["workflow_version.entity_id"],
            name=op.f("fk_run_workflow_version_id_workflow_version"),
        ),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_run")),
    )
    op.create_table(
        "run_entity_input",
        sa.Column("new_entity_id", sa.Integer(), nullable=True),
        sa.Column("field_name", sa.String(), nullable=True),
        sa.Column("run_id", sa.UUID(), nullable=True),
        sa.Column("entity_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name=op.f("fk_run_entity_input_entity_id_entity")),
        sa.ForeignKeyConstraint(["run_id"], ["run.entity_id"], name=op.f("fk_run_entity_input_run_id_run")),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_run_entity_input")),
    )
    op.create_table(
        "run_step",
        sa.Column("run_id", sa.UUID(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("ended_at", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("SUCCEEDED", "FAILED", "PENDING", "STARTED", "RUNNING", name="runstatus", native_enum=False),
            nullable=True,
        ),
        sa.Column("entity_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name=op.f("fk_run_step_entity_id_entity")),
        sa.ForeignKeyConstraint(["run_id"], ["run.entity_id"], name=op.f("fk_run_step_run_id_run")),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_run_step")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("run_step")
    op.drop_table("run_entity_input")
    op.drop_table("run")
    op.drop_table("workflow_version")
    op.drop_table("workflow")
    op.drop_table("entity")
    # ### end Alembic commands ###
