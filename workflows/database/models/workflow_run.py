"""
SQLAlchemy database model for WorkflowRun

Auto-generated by running 'make codegen'. Do not edit.
Make changes to the template codegen/templates/database/models/class_name.py.j2 instead.
"""


import uuid
import datetime
from typing import TYPE_CHECKING

from platformics.database.models.base import Entity
from sqlalchemy import ForeignKey, String, Enum, DateTime
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import Mapped, mapped_column, relationship
from support.enums import WorkflowRunStatus

if TYPE_CHECKING:
    from database.models.file import File
    from database.models.workflow_version import WorkflowVersion
    from database.models.workflow_run_step import WorkflowRunStep
    from database.models.workflow_run_entity_input import WorkflowRunEntityInput
else:
    File = "File"
    WorkflowVersion = "WorkflowVersion"
    WorkflowRunStep = "WorkflowRunStep"
    WorkflowRunEntityInput = "WorkflowRunEntityInput"


class WorkflowRun(Entity):
    __tablename__ = "workflow_run"
    __mapper_args__ = {"polymorphic_identity": __tablename__, "polymorphic_load": "inline"}
    started_at: Mapped[datetime.datetime] = mapped_column(DateTime, nullable=True)
    ended_at: Mapped[datetime.datetime] = mapped_column(DateTime, nullable=True)
    execution_id: Mapped[str] = mapped_column(String, nullable=True)
    outputs_json: Mapped[str] = mapped_column(String, nullable=True)
    workflow_runner_inputs_json: Mapped[str] = mapped_column(String, nullable=True)
    status: Mapped[WorkflowRunStatus] = mapped_column(Enum(WorkflowRunStatus, native_enum=False), nullable=True)
    workflow_version_id: Mapped[uuid.UUID] = mapped_column(
        UUID,
        ForeignKey("workflow_version.entity_id"),
        nullable=True,
    )
    workflow_version: Mapped["WorkflowVersion"] = relationship(
        "WorkflowVersion",
        foreign_keys=workflow_version_id,
        back_populates="runs",
    )
    steps: Mapped[list[WorkflowRunStep]] = relationship(
        "WorkflowRunStep",
        back_populates="workflow_run",
        uselist=True,
        foreign_keys="WorkflowRunStep.workflow_run_id",
    )
    entity_inputs: Mapped[list[WorkflowRunEntityInput]] = relationship(
        "WorkflowRunEntityInput",
        back_populates="workflow_run",
        uselist=True,
        foreign_keys="WorkflowRunEntityInput.workflow_run_id",
    )
    raw_inputs_json: Mapped[str] = mapped_column(String, nullable=True)
    deprecated_by_id: Mapped[uuid.UUID] = mapped_column(
        UUID,
        ForeignKey("workflow_run.entity_id"),
        nullable=True,
    )
    deprecated_by: Mapped["WorkflowRun"] = relationship(
        "WorkflowRun",
        foreign_keys=deprecated_by_id,
    )
    entity_id: Mapped[uuid.UUID] = mapped_column(ForeignKey("entity.id"), nullable=False, primary_key=True)
