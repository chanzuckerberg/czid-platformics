name: Reusable Deploy
on:
  workflow_call:
    inputs: 
      environment: 
        required: true
        type: string
      service:
        required: true
        type: string
      developer_name: 
        type: string
      operation:
        type: string
        required: false
        default: "create-or-update"
    outputs:
      stack_name: 
        description: "The stack name used for deploy"
        value: ${{ jobs.run-deploy.outputs.stack_name }}

jobs:
  run-deploy:
    runs-on: ARM64
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    outputs:
      stack_name: ${{ steps.stack_name.outputs.sname }}
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set stack name
        id: stack_name 
        run: |
          if [ "${{ inputs.service }}" == "entities" ]; then
            SERVICE=en 
          elif [ "${{ inputs.service }}" == "workflows" ]; then
            SERVICE=wf
          fi
          if [ "${{ inputs.environment }}" = "dev" ]; then
            # we must limit stackname length due to role name limitations
            sname=$(echo ${{ inputs.developer_name }} | cut -c1-6)-${SERVICE}
            echo "sname=$sname" >> $GITHUB_OUTPUT
          else
            echo "sname=${{ inputs.service }}" >> $GITHUB_OUTPUT
          fi 
      - name: Assume happy-api deployment role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}  
          role-duration-seconds: 1200 
          role-session-name: core-service-deploy 
      - name: Install happy
        uses: chanzuckerberg/github-actions/.github/actions/install-happy@main
      - name: Create or Update deploy
        uses: chanzuckerberg/github-actions/.github/actions/deploy-happy-stack@main
        with:
          tfe-token: ${{ secrets.TFE_TOKEN }} 
          env: ${{ inputs.environment }} 
          create-tag: true
          stack-name: ${{ steps.stack_name.outputs.sname }} 
          working-directory: ${{ inputs.service }}
          operation: ${{ inputs.operation }}
