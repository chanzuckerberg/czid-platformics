"""
SQLAlchemy database model for RunStep

Auto-generated by running 'make codegen'. Do not edit.
Make changes to the template codegen/templates/database/models/class_name.py.j2 instead.
"""

import uuid
import datetime
from typing import TYPE_CHECKING

from platformics.database.models.base import Entity
from sqlalchemy import ForeignKey, String, Float, Integer, Enum, Boolean, DateTime
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import Mapped, mapped_column, relationship
from support.enums import RunStatus

if TYPE_CHECKING:
    from database.models.file import File
    from database.models.run import Run
else:
    File = "File"
    Run = "Run"


class RunStep(Entity):
    __tablename__ = "run_step"
    __mapper_args__ = {"polymorphic_identity": __tablename__, "polymorphic_load": "inline"}
    run_id: Mapped[uuid.UUID] = mapped_column(UUID, ForeignKey("run.entity_id"), nullable=True)
    run: Mapped[Run] = relationship(Run, back_populates="run_steps", foreign_keys=run_id)
    started_at: Mapped[datetime.datetime] = mapped_column(DateTime, nullable=True)
    ended_at: Mapped[datetime.datetime] = mapped_column(DateTime, nullable=True)
    status: Mapped[RunStatus] = mapped_column(Enum(RunStatus, native_enum=False), nullable=True)
    entity_id: Mapped[uuid.UUID] = mapped_column(ForeignKey("entity.id"), nullable=False, primary_key=True)
