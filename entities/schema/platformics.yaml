id: https://czid.org/entities/schema/platformics
title: CZID Platformics Bio-Entities Schema
name: platformics
default_range: string

types:
  string:
    uri: xsd:string
    base: str
    description: A character string

  integer:
    uri: xsd:integer
    base: int
    description: An integer

  uuid:
    uri: xsd:string
    typeof: str
    base: str
    description: A UUID

  Array2dInt:
    uri: xsd:array
    base: int
    description: A 2D array of integers, e.g. [[1, 2, 3], [4, 5, 6]]

enums:
  FileStatus:
    permissible_values:
      SUCCESS:
        description: This file has been uploaded and validated successfully
      FAILED:
        description: This file failed to upload or failed validation
      PENDING:
        description: This file is a placeholder and awaiting a successful upload
  FileAccessProtocol:
    permissible_values:
      s3:
        description: This file is accessible via the (AWS) S3 protocol
  FileUploadClient:
    permissible_values:
      browser:
        description: File uploaded from the user's browser
      cli:
        description: File uploaded from the CLI
      s3:
        description: File uploaded from S3
      basespace:
        description: File uploaded from Illumina Basespace Cloud
  NucleicAcid:
    permissible_values:
      RNA:
      DNA:
  SequencingProtocol:
    permissible_values:
      ampliseq:
        description: Targeted sequencing (see https://www.illumina.com/products/by-brand/ampliseq.html)
      artic:
        description: SARS-CoV-2 protocol (see https://artic.network/resources/ncov/ncov-amplicon-v3.pdf)
      artic_v3:
        description: SARS-CoV-2 protocol version 3 with short amplicons (275 bp) from Biohub
      artic_v4:
        description: SARS-CoV-2 protocol version 4 (see https://raw.githubusercontent.com/artic-network/artic-ncov2019/master/primer_schemes/nCoV-2019/V4/SARS-CoV-2.primer.bed)
      artic_v5:
        description: SARS-CoV-2 protocol version 5 (see https://github.com/quick-lab/SARS-CoV-2/tree/main/400/v5.3.2_400)
      combined_msspe_artic:
        description: MSSPE + ARTIC concatenated
      covidseq:
        description: SARS-CoV-2 protocol (see https://github.com/artic-network/artic-ncov2019/blob/master/primer_schemes/nCoV-2019/V1/nCoV-2019.bed)
      midnight:
        description: Midnight primer set used at Biohub for Nanopore samples to produce longer reads and reduce the likelihood of coverage drop-out due to genome mutations in the primer sites
      msspe:
        description: Targeted viral RNA sequencing (see https://www.nature.com/articles/s41564-019-0637-9)
      snap:
        description: Whole genome viral sequencing (see https://www.bioscience.co.uk/resources/swift-normalase-amplicon-panel-snap-sars-cov-2-protocol.pdf)
      varskip:
        description: Multiplex PCR for SARS-CoV-2 sequencing (see https://github.com/nebiolabs/VarSkip)
      easyseq:
        description: SARS-CoV-2 sequencing (see https://www.nimagen.com/gfx/Covid19/SARS_CoV_2_kit_V4.txt)
  SequencingTechnology:
    permissible_values:
      Illumina:
      Nanopore:
  TaxonLevel:
    permissible_values:
      # Prepending "level_" because "class" is a reserved word, so can't create an Enum with it.
      level_subspecies:
      level_species:
      level_genus:
      level_family:
      level_order:
      level_class:
      level_phylum:
      level_kingdom:
      level_superkingdom:
  PhylogeneticTreeFormat:
    permissible_values:
      newick:
      auspice_v1:
      auspice_v2:
  BulkDownloadType:
    permissible_values:
      concatenate:
      zip:
  HostOrganismCategory:
    permissible_values:
      human:
      insect:
      non_human_animal:
      unknown:
  IndexTypes:
    permissible_values:
      # NCBI indexes
      nt:
      nt_loc:
      nt_info:
      nr:
      nr_loc:
      lineage:
      accession2taxid:
      deuterostome:
      taxon_blacklist:
      minimap2_long:
      minimap2_short:
      diamond:
      # HostGenome indexes
      star:
      bowtie2:
      bowtie2_v2:
      minimap2_dna:
      minimap2_rna:
      hisat2:
      kallisto:
      original_transcripts_gtf:

classes:
  Entity:
    attributes:
      id:
        identifier: true
        range: uuid
      producing_run_id:
        range: int
        minimum_value: 0
      owner_user_id:
        range: int
        minimum_value: 0
      collection_id:
        range: int
        minimum_value: 0
      created_at:
        range: date
        required: true
      updated_at:
        range: date
    # NOTE - the LinkML schema doesn't support a native "plural name" field as far as I can tell, so
    # we're using an annotation here to tack on the extra functionality that we need. We do this because
    # English pluralization is hard, and we don't want to have to write a custom pluralization function.
    # This basically means we now have our own "dialect" of LinkML to worry about. We may want to see if
    # pluralization can be added to the core spec in the future.
    annotations:
      plural: Entities

  File:
    attributes:
      id:
        identifier: true
        range: uuid
      # This file's ID is stored in the entity column <entity_field_name>_id
      entity_field_name:
        range: string
        required: true
      # Which entity this file is connected to
      entity:
        range: Entity
        required: true
      status:
        range: FileStatus
        required: true
      protocol:
        range: FileAccessProtocol
        required: true
      # Bucket name
      namespace:
        range: string
        required: true
      # Prefix (does not start with /)
      path:
        range: string
        required: true
      file_format:
        range: string
        required: true
      compression_type:
        range: string
      size:
        range: int
        minimum_value: 0
      # Information about file upload (optional)
      upload_client:
        range: FileUploadClient
      upload_error:
        range: string

  # ============================================================================
  # Entities
  # ============================================================================

  # ----------------------------------------------------------------------------
  # Lab sample, associated with one or more SequencingRead entities.
  # ----------------------------------------------------------------------------
  Sample:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      # If this Sample is a copy of what's in the Rails DB, store its ID here
      rails_sample_id:
        range: int
      name:
        range: string
        required: true
      # Metadata provided by user
      sample_type:
        range: string
        required: true
        annotations:
          factory_type: organ
      water_control:
        range: boolean
        required: true
      collection_date:
        range: date
        required: true
      collection_location:
        range: string
        required: true
        annotations:
          factory_type: city
      notes:
        range: string
      host_organism:
        range: HostOrganism
        inverse: HostOrganism.samples
      sequencing_reads:
        range: SequencingRead
        multivalued: true
        inverse: SequencingRead.sample
      metadatas:
        range: Metadatum
        inverse: Metadatum.sample
        multivalued: true
    annotations:
      plural: Samples

  # ----------------------------------------------------------------------------
  # Collection of sequencing reads, stored in FASTQ files.
  # ----------------------------------------------------------------------------
  SequencingRead:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      # Sample associated with this SequencingRead (a sample can have multiple sets of SequencingReads)
      sample:
        range: Sample
        inverse: Sample.sequencing_reads
      # Wet lab protocol (used for SARS-CoV-2 CG where we ask the user for this in the UI)
      protocol:
        range: SequencingProtocol
      # Files containing sequencing reads (R1 and R2 refer to read pairs 1/2 in Illumina paired-end sequencing)
      r1_file:
        range: File
      r2_file:
        range: File
      # Which sequencing technology / instrument was used?
      technology:
        range: SequencingTechnology
        required: true
      # Did we sequence DNA or RNA?
      nucleic_acid:
        range: NucleicAcid
        required: true
      # Is this sequencing read exported from clearlabs? Clearlabs exports have undergone filtering
      clearlabs_export:
        range: boolean
        required: true
      # Medaka is a tool for generating consensus sequences from Nanopore reads. Users choose which model to use in the UI.
      medaka_model:
        range: string
      # Can specify a taxon if it's known, e.g. for "Viral Consensus Genome" pipeline
      taxon:
        range: Taxon
        inverse: Taxon.sequencing_reads
      # Can specify a primer BED file, used to trim primers, e.g. for "Viral Consensus Genome" pipeline
      primer_file:
        range: GenomicRange
        inverse: GenomicRange.sequencing_reads
      # Consensus Genomes generated from these Sequencing Reads
      consensus_genomes:
        range: ConsensusGenome
        inverse: ConsensusGenome.sequence_read
        multivalued: true
    annotations:
      plural: SequencingReads

  # ----------------------------------------------------------------------------
  # Collection of genomic ranges, stored in BED/GTF files.
  # ----------------------------------------------------------------------------
  GenomicRange:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      file:
        range: File
      sequencing_reads:
        range: SequencingRead
        inverse: SequencingRead.primer_file
        multivalued: true
    annotations:
      plural: GenomicRanges

  # ----------------------------------------------------------------------------
  # Reference genomes
  # ----------------------------------------------------------------------------
  ReferenceGenome:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      # FASTA reference genome
      file:
        range: File
      name:
        range: string
        required: true
      consensus_genomes:
        range: ConsensusGenome
        inverse: ConsensusGenome.reference_genome
        multivalued: true
    annotations:
      plural: ReferenceGenomes

  # ----------------------------------------------------------------------------
  # Reference genomes
  # ----------------------------------------------------------------------------
  Accession:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      accession_id:
        range: string
        required: true
      accession_name:
        range: string
        required: true
      upstream_database:
        range: UpstreamDatabase
        required: true
        inverse: UpstreamDatabase.accessions
      consensus_genomes:
        range: ConsensusGenome
        inverse: ConsensusGenome.accession
        multivalued: true
    annotations:
      plural: Accessions

  # ----------------------------------------------------------------------------
  # Host organisms / host filtering information
  # ----------------------------------------------------------------------------
  HostOrganism:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      # e.g. Human
      name:
        range: string
        required: true
      # e.g. v1-hg38, v2-t2t, etc
      version:
        range: string
        required: true
      category:
        range: HostOrganismCategory
        required: true
      # Extra info for host filtering
      is_deuterostome:
        range: boolean
        required: true
      # Indexes for this host for each tool we use
      indexes:
        range: IndexFile
        multivalued: true
        inverse: IndexFile.host_organism
      # Original reference FASTA file used to generate indexes for this host; used for our record keeping
      sequence:
        range: File
      # Samples that obtained from this host organism
      samples:
        range: Sample
        inverse: Sample.host_organism
        multivalued: true
    annotations:
      plural: HostOrganisms

  # ----------------------------------------------------------------------------
  # Metadata
  # ----------------------------------------------------------------------------
  Metadatum:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      sample:
        range: Sample
        inverse: Sample.metadatas
        required: true
      field_name:
        range: string
        required: true
      value:
        range: string
        required: true
    annotations:
      plural: Metadatas

  # ----------------------------------------------------------------------------
  # Result of generating a consensus genome
  # ----------------------------------------------------------------------------
  ConsensusGenome:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      # Which Taxon this ConsensusGenome was created from. Could be a duplicate of SequencingRead.taxon, but needed for CG from mNGS:
      # - CG: SequencingRead.taxon = ConsensusGenome.taxon = taxonId chosen at upload time
      # - SARS-CoV-2 CG: SequencingRead.taxon = ConsensusGenome.taxon = sars-cov-2
      # - CG from mNGS: SequencingRead.taxon = null BUT ConsensusGenome.taxon = taxonId chosen from UI
      taxon:
        range: Taxon
        required: true
        inverse: Taxon.consensus_genomes
      # Which SequencingRead this ConsensusGenome was created from
      sequence_read:
        range: SequencingRead
        required: true
        inverse: SequencingRead.consensus_genomes
      # Must specify a reference sequence or accession for a CG run
      reference_genome:
        range: ReferenceGenome
        inverse: ReferenceGenome.consensus_genomes
      accession:
        range: Accession
        inverse: Accession.consensus_genomes
      # Consensus Genome sequence output by CG pipeline
      sequence:
        range: File
      # Metrics output by CG pipeline
      metrics:
        range: MetricConsensusGenome
        inverse: MetricConsensusGenome.consensus_genome
        # TODO FIXME this is a hack to support 1:1 relationships. It currently specifies that the related
        # class actually defines the relationship and this is just a virtual field. We're misusing the LinkML
        # "inlined" field property until we learn how to use LinkML better and find a better way to express this
        inlined: true
      # Zip file containing intermediate outputs file output by CG pipeline
      intermediate_outputs:
        range: File
    annotations:
      plural: ConsensusGenomes

  MetricConsensusGenome:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      consensus_genome:
        range: ConsensusGenome
        inverse: ConsensusGenome.metrics
        required: true
      reference_genome_length:
        range: float
      percent_genome_called:
        range: float
      percent_identity:
        range: float
      gc_percent:
        range: float
      total_reads:
        range: int
      mapped_reads:
        range: int
      ref_snps:
        range: int
      n_actg:
        range: int
      n_missing:
        range: int
      n_ambiguous:
        range: int
      coverage_depth:
        range: float
      coverage_breadth:
        range: float
      coverage_bin_size:
        range: float
      coverage_total_length:
        range: int
      coverage_viz:
        range: Array2dInt
    annotations:
      plural: MetricsConsensusGenomes

  # ----------------------------------------------------------------------------
  # Taxon lineage information
  # ----------------------------------------------------------------------------
  Taxon:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      wikipedia_id:
        range: string
      description:
        range: string
      common_name:
        range: string
      name:
        range: string
        required: true
      is_phage:
        range: boolean
        required: true
      upstream_database:
        range: UpstreamDatabase
        required: true
        inverse: UpstreamDatabase.taxa
      upstream_database_identifier:
        range: string
        required: true
      level:
        range: TaxonLevel
        required: true
      tax_parent:
        range: Taxon
      tax_subspecies:
        range: Taxon
      tax_species:
        range: Taxon
      tax_genus:
        range: Taxon
      tax_family:
        range: Taxon
      tax_order:
        range: Taxon
      tax_class:
        range: Taxon
      tax_phylum:
        range: Taxon
      tax_kingdom:
        range: Taxon
      tax_superkingdom:
        range: Taxon
      consensus_genomes:
        range: ConsensusGenome
        inverse: ConsensusGenome.taxon
        multivalued: true
      sequencing_reads:
        range: SequencingRead
        inverse: SequencingRead.taxon
        multivalued: true
    annotations:
      plural: Taxa

  UpstreamDatabase:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      name:
        range: string
        required: true
      taxa:
        range: Taxon
        multivalued: true
        inverse: Taxon.upstream_database
      # This is where NCBI indexes would live
      indexes:
        range: IndexFile
        multivalued: true
        inverse: IndexFile.upstream_database
      accessions:
        range: Accession
        inverse: Accession.upstream_database
        multivalued: true
    annotations:
      plural: UpstreamDatabases

  # ----------------------------------------------------------------------------
  # Indexes used by UpstreamDatabases and HostOrganisms
  # ----------------------------------------------------------------------------
  IndexFile:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      # Index type
      name:
        range: IndexTypes
        required: true
      # NCBI index: e.g. "2022-06-02"
      # HostGenome index: e.g. 1, 2, 3, etc
      version:
        range: string
        required: true
      # S3 path to the index file
      file:
        range: File
        required: true
      # Links to either upstream database or host organism
      upstream_database:
        range: UpstreamDatabase
        inverse: UpstreamDatabase.indexes
      host_organism:
        range: HostOrganism
        inverse: HostOrganism.indexes
    annotations:
      plural: IndexFiles


  # ----------------------------------------------------------------------------
  # Phylogenetic tree
  # ----------------------------------------------------------------------------
  PhylogeneticTree:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      tree:
        range: File
      format:
        range: PhylogeneticTreeFormat
        required: true
    annotations:
      plural: PhylogeneticTrees


  # ----------------------------------------------------------------------------
  # Bulk download results
  # ----------------------------------------------------------------------------
  BulkDownload:
    is_a: Entity
    mixins:
      - EntityMixin
    attributes:
      download_type:
        range: BulkDownloadType
        required: true
      file:
        range: File
    annotations:
      plural: BulkDownloads


  # ============================================================================
  # Mixins
  # ============================================================================

  EntityMixin:
    mixin: true
    attributes:
      entity_id:
        required: true
        readonly: true
        range: uuid
        identifier: true
        inverse: entity.id
