"""
Supported GraphQL queries for files and entities

Auto-generated by running 'make codegen'. Do not edit.
Make changes to the template codegen/templates/api/queries.py.j2 instead.
"""

import strawberry
from strawberry import relay
from typing import Sequence, List
from api.files import File, resolve_files
from api.types.sample import Sample, resolve_samples, SampleAggregate, resolve_samples_aggregate
from api.types.sequencing_read import (
    SequencingRead,
    resolve_sequencing_reads,
    SequencingReadAggregate,
    resolve_sequencing_reads_aggregate,
)
from api.types.genomic_range import (
    GenomicRange,
    resolve_genomic_ranges,
    GenomicRangeAggregate,
    resolve_genomic_ranges_aggregate,
)
from api.types.reference_genome import (
    ReferenceGenome,
    resolve_reference_genomes,
    ReferenceGenomeAggregate,
    resolve_reference_genomes_aggregate,
)
from api.types.host_organism import (
    HostOrganism,
    resolve_host_organisms,
    HostOrganismAggregate,
    resolve_host_organisms_aggregate,
)
from api.types.metadatum import Metadatum, resolve_metadatas, MetadatumAggregate, resolve_metadatas_aggregate
from api.types.consensus_genome import (
    ConsensusGenome,
    resolve_consensus_genomes,
    ConsensusGenomeAggregate,
    resolve_consensus_genomes_aggregate,
)
from api.types.metric_consensus_genome import (
    MetricConsensusGenome,
    resolve_metrics_consensus_genomes,
    MetricConsensusGenomeAggregate,
    resolve_metrics_consensus_genomes_aggregate,
)
from api.types.taxon import Taxon, resolve_taxa, TaxonAggregate, resolve_taxa_aggregate
from api.types.upstream_database import (
    UpstreamDatabase,
    resolve_upstream_databases,
    UpstreamDatabaseAggregate,
    resolve_upstream_databases_aggregate,
)
from api.types.index_file import IndexFile, resolve_index_files, IndexFileAggregate, resolve_index_files_aggregate
from api.types.phylogenetic_tree import (
    PhylogeneticTree,
    resolve_phylogenetic_trees,
    PhylogeneticTreeAggregate,
    resolve_phylogenetic_trees_aggregate,
)
from api.types.bulk_download import (
    BulkDownload,
    resolve_bulk_downloads,
    BulkDownloadAggregate,
    resolve_bulk_downloads_aggregate,
)


@strawberry.type
class Query:
    # Allow relay-style queries by node ID
    node: relay.Node = relay.node()
    nodes: List[relay.Node] = relay.node()
    # Query files
    files: Sequence[File] = resolve_files

    # Query entities
    samples: Sequence[Sample] = resolve_samples
    sequencing_reads: Sequence[SequencingRead] = resolve_sequencing_reads
    genomic_ranges: Sequence[GenomicRange] = resolve_genomic_ranges
    reference_genomes: Sequence[ReferenceGenome] = resolve_reference_genomes
    host_organisms: Sequence[HostOrganism] = resolve_host_organisms
    metadatas: Sequence[Metadatum] = resolve_metadatas
    consensus_genomes: Sequence[ConsensusGenome] = resolve_consensus_genomes
    metrics_consensus_genomes: Sequence[MetricConsensusGenome] = resolve_metrics_consensus_genomes
    taxa: Sequence[Taxon] = resolve_taxa
    upstream_databases: Sequence[UpstreamDatabase] = resolve_upstream_databases
    index_files: Sequence[IndexFile] = resolve_index_files
    phylogenetic_trees: Sequence[PhylogeneticTree] = resolve_phylogenetic_trees
    bulk_downloads: Sequence[BulkDownload] = resolve_bulk_downloads

    # Query entity aggregates
    samples_aggregate: SampleAggregate = resolve_samples_aggregate
    sequencing_reads_aggregate: SequencingReadAggregate = resolve_sequencing_reads_aggregate
    genomic_ranges_aggregate: GenomicRangeAggregate = resolve_genomic_ranges_aggregate
    reference_genomes_aggregate: ReferenceGenomeAggregate = resolve_reference_genomes_aggregate
    host_organisms_aggregate: HostOrganismAggregate = resolve_host_organisms_aggregate
    metadatas_aggregate: MetadatumAggregate = resolve_metadatas_aggregate
    consensus_genomes_aggregate: ConsensusGenomeAggregate = resolve_consensus_genomes_aggregate
    metrics_consensus_genomes_aggregate: MetricConsensusGenomeAggregate = resolve_metrics_consensus_genomes_aggregate
    taxa_aggregate: TaxonAggregate = resolve_taxa_aggregate
    upstream_databases_aggregate: UpstreamDatabaseAggregate = resolve_upstream_databases_aggregate
    index_files_aggregate: IndexFileAggregate = resolve_index_files_aggregate
    phylogenetic_trees_aggregate: PhylogeneticTreeAggregate = resolve_phylogenetic_trees_aggregate
    bulk_downloads_aggregate: BulkDownloadAggregate = resolve_bulk_downloads_aggregate
