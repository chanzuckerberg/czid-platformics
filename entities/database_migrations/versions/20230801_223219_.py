"""

Create Date: 2023-08-01 22:32:19.533284

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects.postgresql import UUID

# revision identifiers, used by Alembic.
revision = "20230801_223219"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entity",
        sa.Column("id", UUID(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("producing_run_id", sa.Integer(), nullable=True),
        sa.Column("owner_user_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_entity")),
    )
    op.create_table(
        "sample",
        sa.Column("entity_id", UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name=op.f("fk_sample_entity_id_entity")),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_sample")),
    )
    op.create_table(
        "sequencing_read",
        sa.Column("entity_id", UUID(), nullable=False),
        sa.Column("nucleotide", sa.String(), nullable=False),
        sa.Column("sequence", sa.String(), nullable=False),
        sa.Column("protocol", sa.String(), nullable=False),
        sa.Column("sample_id", UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["entity_id"],
            ["entity.id"],
            name=op.f("fk_sequencing_read_entity_id_entity"),
        ),
        sa.ForeignKeyConstraint(
            ["sample_id"],
            ["sample.entity_id"],
            name=op.f("fk_sequencing_read_sample_id_sample"),
        ),
        sa.PrimaryKeyConstraint("entity_id", name=op.f("pk_sequencing_read")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("sequencing_read")
    op.drop_table("sample")
    op.drop_table("entity")
    # ### end Alembic commands ###
