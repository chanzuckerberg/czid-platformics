"""update schema

Create Date: 2024-02-21 17:59:30.723790

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "20240221_095929"
down_revision = "20240215_173411"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_phylogenetic_tree_tree_id", table_name="phylogenetic_tree")
    op.drop_table("phylogenetic_tree")
    op.add_column("bulk_download", sa.Column("download_display_name", sa.String(), nullable=False))
    op.add_column("consensus_genome", sa.Column("sequencing_read_id", sa.UUID(), nullable=False))
    op.drop_index("ix_consensus_genome_sequence_read_id", table_name="consensus_genome")
    op.create_index(
        op.f("ix_consensus_genome_sequencing_read_id"), "consensus_genome", ["sequencing_read_id"], unique=False
    )
    op.drop_constraint("fk_consensus_genome_sequence_read_id_sequencing_read", "consensus_genome", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_consensus_genome_sequencing_read_id_sequencing_read"),
        "consensus_genome",
        "sequencing_read",
        ["sequencing_read_id"],
        ["entity_id"],
    )
    op.drop_column("consensus_genome", "sequence_read_id")
    op.add_column(
        "file", sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False)
    )
    op.add_column("file", sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True))
    op.drop_index("ix_host_organism_sequence_id", table_name="host_organism")
    op.drop_constraint("fk_host_organism_sequence_id_file", "host_organism", type_="foreignkey")
    op.drop_column("host_organism", "sequence_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("host_organism", sa.Column("sequence_id", sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key("fk_host_organism_sequence_id_file", "host_organism", "file", ["sequence_id"], ["id"])
    op.create_index("ix_host_organism_sequence_id", "host_organism", ["sequence_id"], unique=False)
    op.drop_column("file", "updated_at")
    op.drop_column("file", "created_at")
    op.add_column("consensus_genome", sa.Column("sequence_read_id", sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(
        op.f("fk_consensus_genome_sequencing_read_id_sequencing_read"), "consensus_genome", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_consensus_genome_sequence_read_id_sequencing_read",
        "consensus_genome",
        "sequencing_read",
        ["sequence_read_id"],
        ["entity_id"],
    )
    op.drop_index(op.f("ix_consensus_genome_sequencing_read_id"), table_name="consensus_genome")
    op.create_index("ix_consensus_genome_sequence_read_id", "consensus_genome", ["sequence_read_id"], unique=False)
    op.drop_column("consensus_genome", "sequencing_read_id")
    op.drop_column("bulk_download", "download_display_name")
    op.create_table(
        "phylogenetic_tree",
        sa.Column("tree_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("format", sa.VARCHAR(length=10), autoincrement=False, nullable=False),
        sa.Column("entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["entity_id"], ["entity.id"], name="fk_phylogenetic_tree_entity_id_entity"),
        sa.ForeignKeyConstraint(["tree_id"], ["file.id"], name="fk_phylogenetic_tree_tree_id_file"),
        sa.PrimaryKeyConstraint("entity_id", name="pk_phylogenetic_tree"),
    )
    op.create_index("ix_phylogenetic_tree_tree_id", "phylogenetic_tree", ["tree_id"], unique=False)
    # ### end Alembic commands ###
