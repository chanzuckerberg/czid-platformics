"""update taxon lineage model

Create Date: 2024-01-09 23:27:06.994048

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "20240109_152706"
down_revision = "20240105_133708"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("taxon", sa.Column("tax_parent_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_subspecies_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_species_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_genus_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_family_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_order_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_class_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_phylum_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_kingdom_id", sa.UUID(), nullable=True))
    op.add_column("taxon", sa.Column("tax_superkingdom_id", sa.UUID(), nullable=True))
    op.alter_column(
        "taxon",
        "level",
        existing_type=sa.VARCHAR(length=7),
        type_=sa.Enum(
            "level_subspecies",
            "level_species",
            "level_genus",
            "level_family",
            "level_order",
            "level_class",
            "level_phylum",
            "level_kingdom",
            "level_superkingdom",
            name="taxonlevel",
            native_enum=False,
        ),
        existing_nullable=False,
    )
    op.create_foreign_key(op.f("fk_taxon_tax_family_id_taxon"), "taxon", "taxon", ["tax_family_id"], ["entity_id"])
    op.create_foreign_key(
        op.f("fk_taxon_tax_superkingdom_id_taxon"), "taxon", "taxon", ["tax_superkingdom_id"], ["entity_id"]
    )
    op.create_foreign_key(op.f("fk_taxon_tax_parent_id_taxon"), "taxon", "taxon", ["tax_parent_id"], ["entity_id"])
    op.create_foreign_key(op.f("fk_taxon_tax_order_id_taxon"), "taxon", "taxon", ["tax_order_id"], ["entity_id"])
    op.create_foreign_key(op.f("fk_taxon_tax_kingdom_id_taxon"), "taxon", "taxon", ["tax_kingdom_id"], ["entity_id"])
    op.create_foreign_key(op.f("fk_taxon_tax_phylum_id_taxon"), "taxon", "taxon", ["tax_phylum_id"], ["entity_id"])
    op.create_foreign_key(op.f("fk_taxon_tax_genus_id_taxon"), "taxon", "taxon", ["tax_genus_id"], ["entity_id"])
    op.create_foreign_key(op.f("fk_taxon_tax_class_id_taxon"), "taxon", "taxon", ["tax_class_id"], ["entity_id"])
    op.create_foreign_key(
        op.f("fk_taxon_tax_subspecies_id_taxon"), "taxon", "taxon", ["tax_subspecies_id"], ["entity_id"]
    )
    op.create_foreign_key(op.f("fk_taxon_tax_species_id_taxon"), "taxon", "taxon", ["tax_species_id"], ["entity_id"])
    op.drop_column("taxon", "tax_id_order")
    op.drop_column("taxon", "tax_id_species")
    op.drop_column("taxon", "tax_id_parent")
    op.drop_column("taxon", "tax_id_class")
    op.drop_column("taxon", "tax_id")
    op.drop_column("taxon", "tax_id_phylum")
    op.drop_column("taxon", "tax_id_family")
    op.drop_column("taxon", "tax_id_genus")
    op.drop_column("taxon", "tax_id_kingdom")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("taxon", sa.Column("tax_id_kingdom", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_genus", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_family", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_phylum", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_class", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_parent", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_species", sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column("taxon", sa.Column("tax_id_order", sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("fk_taxon_tax_species_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_subspecies_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_class_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_genus_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_phylum_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_kingdom_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_order_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_parent_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_superkingdom_id_taxon"), "taxon", type_="foreignkey")
    op.drop_constraint(op.f("fk_taxon_tax_family_id_taxon"), "taxon", type_="foreignkey")
    op.alter_column(
        "taxon",
        "level",
        existing_type=sa.Enum(
            "level_subspecies",
            "level_species",
            "level_genus",
            "level_family",
            "level_order",
            "level_class",
            "level_phylum",
            "level_kingdom",
            "level_superkingdom",
            name="taxonlevel",
            native_enum=False,
        ),
        type_=sa.VARCHAR(length=7),
        existing_nullable=False,
    )
    op.drop_column("taxon", "tax_superkingdom_id")
    op.drop_column("taxon", "tax_kingdom_id")
    op.drop_column("taxon", "tax_phylum_id")
    op.drop_column("taxon", "tax_class_id")
    op.drop_column("taxon", "tax_order_id")
    op.drop_column("taxon", "tax_family_id")
    op.drop_column("taxon", "tax_genus_id")
    op.drop_column("taxon", "tax_species_id")
    op.drop_column("taxon", "tax_subspecies_id")
    op.drop_column("taxon", "tax_parent_id")
    # ### end Alembic commands ###
