"""
Factory for generating MetricConsensusGenome objects.

Auto-generated by running 'make codegen'. Do not edit.
Make changes to the template codegen/templates/test_infra/factories/class_name.py.j2 instead.
"""

# ruff: noqa: E501 Line too long

import factory
from database.models import MetricConsensusGenome
from test_infra.factories.main import CommonFactory, FileFactory
from factory import Faker, fuzzy
from faker_biology.bioseq import Bioseq
from faker_biology.physiology import Organ
from faker_enum import EnumProvider

Faker.add_provider(Bioseq)
Faker.add_provider(Organ)
Faker.add_provider(EnumProvider)


class MetricConsensusGenomeFactory(CommonFactory):
    class Meta:
        sqlalchemy_session = None  # workaround for a bug in factoryboy
        model = MetricConsensusGenome
        # Match entity_id with existing db rows to determine whether we should
        # create a new row or not.
        sqlalchemy_get_or_create = ("entity_id",)

    consensus_genome = factory.Faker("ConsensusGenome")
    coverage_depth = fuzzy.FuzzyFloat(1, 100)
    reference_genome_length = fuzzy.FuzzyFloat(1, 100)
    percent_genome_called = fuzzy.FuzzyFloat(1, 100)
    percent_identity = fuzzy.FuzzyFloat(1, 100)
    gc_percent = fuzzy.FuzzyFloat(1, 100)
    total_reads = fuzzy.FuzzyInteger(1, 1000)
    mapped_reads = fuzzy.FuzzyInteger(1, 1000)
    ref_snps = fuzzy.FuzzyInteger(1, 1000)
    n_actg = fuzzy.FuzzyInteger(1, 1000)
    n_missing = fuzzy.FuzzyInteger(1, 1000)
    n_ambiguous = fuzzy.FuzzyInteger(1, 1000)
    coverage_viz_summary_file = factory.RelatedFactory(
        FileFactory,
        factory_related_name="entity",
        entity_field_name="coverage_viz_summary_file",
        file_format="fastq",
    )
