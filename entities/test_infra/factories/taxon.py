# Auto-generated by running 'make codegen'. Do not edit.
# Make changes to the template codegen/templates/test_infra/factories/class_name.py.j2 instead.

# ruff: noqa: E501 Line too long

import factory
from database.models import Taxon
from test_infra.factories.main import CommonFactory, FileFactory
from test_infra.factories.upstream_database import UpstreamDatabaseFactory
from factory import Faker, fuzzy
from faker_biology.bioseq import Bioseq
from faker_biology.physiology import Organ
from faker_enum import EnumProvider

Faker.add_provider(Bioseq)
Faker.add_provider(Organ)
Faker.add_provider(EnumProvider)


class TaxonFactory(CommonFactory):
    class Meta:
        sqlalchemy_session = None  # workaround for a bug in factoryboy
        model = Taxon
        # TODO:
        # What fields do we try to match to existing db rows to determine whether we
        # should create a new row or not?
        # sqlalchemy_get_or_create = ("name", "collection_location")
    wikipedia_id = factory.Faker("string") 
    description = factory.Faker("string") 
    common_name = factory.Faker("string") 
    name = factory.Faker("string") 
    is_phage = factory.Faker("boolean") 
    upstream_database = factory.SubFactory(
        UpstreamDatabaseFactory,
        owner_user_id=factory.SelfAttribute("..owner_user_id"),
        collection_id=factory.SelfAttribute("..collection_id"),
    )
    upstream_database_identifier = factory.Faker("string") 
    level = fuzzy.FuzzyChoice([
        "species", 
        "genus", 
        "family"
    ])
    tax_id = factory.Faker("int") 
    tax_id_parent = factory.Faker("int") 
    tax_id_species = factory.Faker("int") 
    tax_id_genus = factory.Faker("int") 
    tax_id_family = factory.Faker("int") 
    tax_id_order = factory.Faker("int") 
    tax_id_class = factory.Faker("int") 
    tax_id_phylum = factory.Faker("int") 
    tax_id_kingdom = factory.Faker("int") 